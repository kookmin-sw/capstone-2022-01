scalar DateTime
scalar Upload


type Query {
  getMyProfile: User
  getUserProfile(userid: Int!): User

  getFile(id: Int!): File
  getFiles: [File]

  getMyAlarms: [Alarm]

  getMyStuff: [Stuff]
  getMyStuffByStatus(status: String!): [Stuff]
  getStuffByLocation(location: String!): [Stuff]
  getStuffById(id: Int!): Stuff

  getMyHostChats: [Chat]
  getMyJoinChats: [Chat]
  getMyChats: [Chat]
  getChat(id: Int!): Chat
}

type Mutation {
  signup(email: String!, password: String!, name: String!, location: String!, imageUrl: String): AuthPayload
  login(email: String!, password: String!): AuthPayload

  putAlarms(text: String!): Alarm
  readAlarm(id: Int!): Alarm

  tradingReward(id: Int!): User
  updateMyLocation(location: String!): User
  updateMyImageurl(imageUrl: String!): User

  uploadStuff(title: String!, qrcodeUrl: String!, imageUrl: String): Stuff
  updateOwnedToFinding(id: Int!, location: String!, reward: Int!): Stuff
  updateFindingToOwned(id: Int!): Stuff
  updateFindingToCommunicating(id: Int!, acquirerId: Int!): Stuff
  updateCommunicatingToFinding(id: Int!): Stuff
  updateCommunicatingToOwned(id: Int!): Stuff
  deleteOwned(id: Int!): Stuff

  updateStuffReward(id: Int!, reward: Int!): Stuff
  updateStuffLocation(id: Int!, location: String!): Stuff

  singleUpload(file: Upload!): File!
  qrcodeGenerate(id: Int!, size: Int!): Stuff
  createMessage(targetUserId: Int!, stuffId: Int!): Chat
  sendMessage(chatId: Int!, text: String!): Message
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  imageUrl: String
  location:  String!
  point: Int
  hostChats: [Chat]
  joinChats: [Chat]
}

type Stuff {
  id: ID!
  title: String!
  status: String
  location: String
  reward: Int
  imageUrl: String
  qrcodeUrl: String!
  createdAt: DateTime!
  postedBy: User
  acquirerId: Int
}

type File {
  id: ID!
  name: String!
  mimetype: String!
  encoding: String!
  createdAt: DateTime!
  uploadedBy: User
}

type Alarm {
  id: ID!
  text: String!
  read: Boolean!
  createdAt: DateTime!
  owner: User
}

type Chat {
  id: ID!
  host: User!
  participant: User!
  stuffId: Int!
  messages: [Message]
  lastConnectHost: DateTime!
  lastConnectParti: DateTime
}

type Message {
  id: ID!
  text: String!
  fromUserId: Int!
  chat: Chat!
  createdAt: DateTime!
}
