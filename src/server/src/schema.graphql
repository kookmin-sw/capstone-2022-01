type Query {
  getMyProfile: User
  getUserProfile(userid: Int!): User
  getMyStuff: [Stuff]
  getMyStuffStatus(status: String!): [Stuff]
}

type Mutation {
  signup(email: String!, password: String!, name: String!, location: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  updateUserLocation(location: String!): User
  uploadStuff(title: String!): Stuff
  updateStuffStatus(id: Int!, status: String!): Stuff
  updateStuffReward(id: Int!, reward: Int!): Stuff
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  location:  String!
  point: Int
}

type Stuff {
  id: ID!
  title: String!
  status: String
  reward: Int
  createdAt: DateTime!
  postedBy: User!
}

scalar DateTime
